
7segment.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000a  00800100  00000252  000002e6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000252  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  0080010a  0080010a  000002f0  2**0
                  ALLOC
  3 .debug_aranges 00000020  00000000  00000000  000002f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 0000005e  00000000  00000000  00000310  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000029a  00000000  00000000  0000036e  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000172  00000000  00000000  00000608  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000267  00000000  00000000  0000077a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000050  00000000  00000000  000009e4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000000db  00000000  00000000  00000a34  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000088  00000000  00000000  00000b0f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000048  00000000  00000000  00000b97  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
   4:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__vector_1>
   8:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
   c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  10:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  14:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  18:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  1c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  20:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  24:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  28:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  2c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  30:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  34:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  38:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  3c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  40:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  44:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  48:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  4c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  50:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  54:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  58:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  5c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  60:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  64:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  68:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  6c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  70:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  74:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  78:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  7c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  80:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  84:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  88:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e2 e5       	ldi	r30, 0x52	; 82
  a0:	f2 e0       	ldi	r31, 0x02	; 2
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	aa 30       	cpi	r26, 0x0A	; 10
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	11 e0       	ldi	r17, 0x01	; 1
  b4:	aa e0       	ldi	r26, 0x0A	; 10
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	ae 30       	cpi	r26, 0x0E	; 14
  be:	b1 07       	cpc	r27, r17
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <main>
  c6:	0c 94 27 01 	jmp	0x24e	; 0x24e <_exit>

000000ca <__bad_interrupt>:
  ca:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ce <seg_loading>:

/**********************************************************************************/

void seg_loading(void)
{
    PORTA = 0b01000000;
  ce:	80 e4       	ldi	r24, 0x40	; 64
  d0:	8b bb       	out	0x1b, r24	; 27
	PORTC = 0x0;
  d2:	15 ba       	out	0x15, r1	; 21
}
  d4:	08 95       	ret

000000d6 <seg_Start>:

/**********************************************************************************/

void seg_Start(void)
{
  d6:	0f 93       	push	r16
  d8:	1f 93       	push	r17
  da:	cf 93       	push	r28
  dc:	df 93       	push	r29
  de:	c0 91 0c 01 	lds	r28, 0x010C
  e2:	d0 91 0d 01 	lds	r29, 0x010D
  e6:	20 91 0a 01 	lds	r18, 0x010A
  ea:	30 91 0b 01 	lds	r19, 0x010B
    while(j<=12)
    {
      PORTA = FND_A[j%10];
      PORTC = 0b00000111;
  ee:	47 e0       	ldi	r20, 0x07	; 7
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  f0:	00 e2       	ldi	r16, 0x20	; 32
  f2:	1e e4       	ldi	r17, 0x4E	; 78
  f4:	41 c0       	rjmp	.+130    	; 0x178 <seg_Start+0xa2>

void seg_Start(void)
{
    while(j<=12)
    {
      PORTA = FND_A[j%10];
  f6:	c9 01       	movw	r24, r18
  f8:	6a e0       	ldi	r22, 0x0A	; 10
  fa:	70 e0       	ldi	r23, 0x00	; 0
  fc:	0e 94 13 01 	call	0x226	; 0x226 <__udivmodhi4>
 100:	dc 01       	movw	r26, r24
 102:	fc 01       	movw	r30, r24
 104:	e0 50       	subi	r30, 0x00	; 0
 106:	ff 4f       	sbci	r31, 0xFF	; 255
 108:	80 81       	ld	r24, Z
 10a:	8b bb       	out	0x1b, r24	; 27
      PORTC = 0b00000111;
 10c:	45 bb       	out	0x15, r20	; 21
 10e:	c8 01       	movw	r24, r16
 110:	01 97       	sbiw	r24, 0x01	; 1
 112:	f1 f7       	brne	.-4      	; 0x110 <seg_Start+0x3a>

      _delay_ms(5); 

      PORTA = FND_A[j%10 - 1];
 114:	31 97       	sbiw	r30, 0x01	; 1
 116:	80 81       	ld	r24, Z
 118:	8b bb       	out	0x1b, r24	; 27
      PORTC = (j >= 1) ? 0b00001011 : 0b00001111;
 11a:	21 15       	cp	r18, r1
 11c:	31 05       	cpc	r19, r1
 11e:	11 f4       	brne	.+4      	; 0x124 <seg_Start+0x4e>
 120:	8f e0       	ldi	r24, 0x0F	; 15
 122:	01 c0       	rjmp	.+2      	; 0x126 <seg_Start+0x50>
 124:	8b e0       	ldi	r24, 0x0B	; 11
 126:	85 bb       	out	0x15, r24	; 21
 128:	c8 01       	movw	r24, r16
 12a:	01 97       	sbiw	r24, 0x01	; 1
 12c:	f1 f7       	brne	.-4      	; 0x12a <seg_Start+0x54>

      _delay_ms(5); 

      PORTA = FND_A[j%10 - 2];
 12e:	fd 01       	movw	r30, r26
 130:	e2 50       	subi	r30, 0x02	; 2
 132:	ff 4f       	sbci	r31, 0xFF	; 255
 134:	80 81       	ld	r24, Z
 136:	8b bb       	out	0x1b, r24	; 27
      PORTC = (j >= 2) ? 0b00001101 : 0b00001111;
 138:	22 30       	cpi	r18, 0x02	; 2
 13a:	31 05       	cpc	r19, r1
 13c:	10 f4       	brcc	.+4      	; 0x142 <seg_Start+0x6c>
 13e:	8f e0       	ldi	r24, 0x0F	; 15
 140:	01 c0       	rjmp	.+2      	; 0x144 <seg_Start+0x6e>
 142:	8d e0       	ldi	r24, 0x0D	; 13
 144:	85 bb       	out	0x15, r24	; 21
 146:	c8 01       	movw	r24, r16
 148:	01 97       	sbiw	r24, 0x01	; 1
 14a:	f1 f7       	brne	.-4      	; 0x148 <seg_Start+0x72>

      _delay_ms(5); 

      PORTA = FND_A[j%10 - 3];
 14c:	a3 50       	subi	r26, 0x03	; 3
 14e:	bf 4f       	sbci	r27, 0xFF	; 255
 150:	8c 91       	ld	r24, X
 152:	8b bb       	out	0x1b, r24	; 27
      PORTC = (j >= 3) ? 0b00001110 : 0b00001111;
 154:	23 30       	cpi	r18, 0x03	; 3
 156:	31 05       	cpc	r19, r1
 158:	10 f4       	brcc	.+4      	; 0x15e <seg_Start+0x88>
 15a:	8f e0       	ldi	r24, 0x0F	; 15
 15c:	01 c0       	rjmp	.+2      	; 0x160 <seg_Start+0x8a>
 15e:	8e e0       	ldi	r24, 0x0E	; 14
 160:	85 bb       	out	0x15, r24	; 21
 162:	c8 01       	movw	r24, r16
 164:	01 97       	sbiw	r24, 0x01	; 1
 166:	f1 f7       	brne	.-4      	; 0x164 <seg_Start+0x8e>

      _delay_ms(5); 

	  i++;	
 168:	21 96       	adiw	r28, 0x01	; 1

		if(j<=12)
            { 
			if(i>=50)  
 16a:	c2 33       	cpi	r28, 0x32	; 50
 16c:	d1 05       	cpc	r29, r1
 16e:	20 f0       	brcs	.+8      	; 0x178 <seg_Start+0xa2>
		    	{
				i=0; j++;
 170:	2f 5f       	subi	r18, 0xFF	; 255
 172:	3f 4f       	sbci	r19, 0xFF	; 255
 174:	c0 e0       	ldi	r28, 0x00	; 0
 176:	d0 e0       	ldi	r29, 0x00	; 0

/**********************************************************************************/

void seg_Start(void)
{
    while(j<=12)
 178:	2d 30       	cpi	r18, 0x0D	; 13
 17a:	31 05       	cpc	r19, r1
 17c:	08 f4       	brcc	.+2      	; 0x180 <seg_Start+0xaa>
 17e:	bb cf       	rjmp	.-138    	; 0xf6 <seg_Start+0x20>
 180:	d0 93 0d 01 	sts	0x010D, r29
 184:	c0 93 0c 01 	sts	0x010C, r28
 188:	30 93 0b 01 	sts	0x010B, r19
 18c:	20 93 0a 01 	sts	0x010A, r18
		    }
		else
		    i,j = 0;
        }

		PORTA = 0b10000000;
 190:	80 e8       	ldi	r24, 0x80	; 128
 192:	8b bb       	out	0x1b, r24	; 27
	    PORTC = 0x0;
 194:	15 ba       	out	0x15, r1	; 21
 196:	88 ee       	ldi	r24, 0xE8	; 232
 198:	93 e0       	ldi	r25, 0x03	; 3
 19a:	20 e9       	ldi	r18, 0x90	; 144
 19c:	31 e0       	ldi	r19, 0x01	; 1
 19e:	f9 01       	movw	r30, r18
 1a0:	31 97       	sbiw	r30, 0x01	; 1
 1a2:	f1 f7       	brne	.-4      	; 0x1a0 <seg_Start+0xca>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 1a4:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 1a6:	d9 f7       	brne	.-10     	; 0x19e <seg_Start+0xc8>

/**********************************************************************************/

void seg_loading(void)
{
    PORTA = 0b01000000;
 1a8:	80 e4       	ldi	r24, 0x40	; 64
 1aa:	8b bb       	out	0x1b, r24	; 27
	PORTC = 0x0;
 1ac:	15 ba       	out	0x15, r1	; 21
	    PORTC = 0x0;
     	
		_delay_ms(100);		
 		
		seg_loading();
}
 1ae:	df 91       	pop	r29
 1b0:	cf 91       	pop	r28
 1b2:	1f 91       	pop	r17
 1b4:	0f 91       	pop	r16
 1b6:	08 95       	ret

000001b8 <main>:

/**********************************************************************************/

void main(void)
{
	DDRA = 0xFF;
 1b8:	8f ef       	ldi	r24, 0xFF	; 255
 1ba:	8a bb       	out	0x1a, r24	; 26
	DDRC = 0x0F;
 1bc:	8f e0       	ldi	r24, 0x0F	; 15
 1be:	84 bb       	out	0x14, r24	; 20

/**********************************************************************************/

void seg_loading(void)
{
    PORTA = 0b01000000;
 1c0:	80 e4       	ldi	r24, 0x40	; 64
 1c2:	8b bb       	out	0x1b, r24	; 27
	PORTC = 0x0;
 1c4:	15 ba       	out	0x15, r1	; 21
	DDRA = 0xFF;
	DDRC = 0x0F;

	seg_loading();

	EIMSK = 0b00000001;
 1c6:	81 e0       	ldi	r24, 0x01	; 1
 1c8:	89 bf       	out	0x39, r24	; 57
	EICRA = 0b00000010;
 1ca:	82 e0       	ldi	r24, 0x02	; 2
 1cc:	80 93 6a 00 	sts	0x006A, r24
	SREG = 0x80;
 1d0:	80 e8       	ldi	r24, 0x80	; 128
 1d2:	8f bf       	out	0x3f, r24	; 63
 1d4:	ff cf       	rjmp	.-2      	; 0x1d4 <main+0x1c>

000001d6 <__vector_1>:
}
 
/**********************************************************************************/

ISR(INT0_vect)
{
 1d6:	1f 92       	push	r1
 1d8:	0f 92       	push	r0
 1da:	0f b6       	in	r0, 0x3f	; 63
 1dc:	0f 92       	push	r0
 1de:	0b b6       	in	r0, 0x3b	; 59
 1e0:	0f 92       	push	r0
 1e2:	11 24       	eor	r1, r1
 1e4:	2f 93       	push	r18
 1e6:	3f 93       	push	r19
 1e8:	4f 93       	push	r20
 1ea:	5f 93       	push	r21
 1ec:	6f 93       	push	r22
 1ee:	7f 93       	push	r23
 1f0:	8f 93       	push	r24
 1f2:	9f 93       	push	r25
 1f4:	af 93       	push	r26
 1f6:	bf 93       	push	r27
 1f8:	ef 93       	push	r30
 1fa:	ff 93       	push	r31
    seg_Start();
 1fc:	0e 94 6b 00 	call	0xd6	; 0xd6 <seg_Start>
}
 200:	ff 91       	pop	r31
 202:	ef 91       	pop	r30
 204:	bf 91       	pop	r27
 206:	af 91       	pop	r26
 208:	9f 91       	pop	r25
 20a:	8f 91       	pop	r24
 20c:	7f 91       	pop	r23
 20e:	6f 91       	pop	r22
 210:	5f 91       	pop	r21
 212:	4f 91       	pop	r20
 214:	3f 91       	pop	r19
 216:	2f 91       	pop	r18
 218:	0f 90       	pop	r0
 21a:	0b be       	out	0x3b, r0	; 59
 21c:	0f 90       	pop	r0
 21e:	0f be       	out	0x3f, r0	; 63
 220:	0f 90       	pop	r0
 222:	1f 90       	pop	r1
 224:	18 95       	reti

00000226 <__udivmodhi4>:
 226:	aa 1b       	sub	r26, r26
 228:	bb 1b       	sub	r27, r27
 22a:	51 e1       	ldi	r21, 0x11	; 17
 22c:	07 c0       	rjmp	.+14     	; 0x23c <__udivmodhi4_ep>

0000022e <__udivmodhi4_loop>:
 22e:	aa 1f       	adc	r26, r26
 230:	bb 1f       	adc	r27, r27
 232:	a6 17       	cp	r26, r22
 234:	b7 07       	cpc	r27, r23
 236:	10 f0       	brcs	.+4      	; 0x23c <__udivmodhi4_ep>
 238:	a6 1b       	sub	r26, r22
 23a:	b7 0b       	sbc	r27, r23

0000023c <__udivmodhi4_ep>:
 23c:	88 1f       	adc	r24, r24
 23e:	99 1f       	adc	r25, r25
 240:	5a 95       	dec	r21
 242:	a9 f7       	brne	.-22     	; 0x22e <__udivmodhi4_loop>
 244:	80 95       	com	r24
 246:	90 95       	com	r25
 248:	bc 01       	movw	r22, r24
 24a:	cd 01       	movw	r24, r26
 24c:	08 95       	ret

0000024e <_exit>:
 24e:	f8 94       	cli

00000250 <__stop_program>:
 250:	ff cf       	rjmp	.-2      	; 0x250 <__stop_program>
